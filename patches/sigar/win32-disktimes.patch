diff --git a/src/os/win32/win32_sigar.c b/src/os/win32/win32_sigar.c
index 4288f08..97d21dd 100755
--- a/src/os/win32/win32_sigar.c
+++ b/src/os/win32/win32_sigar.c
@@ -81,6 +81,7 @@ typedef enum {
     PERF_IX_DISK_TIME,
     PERF_IX_DISK_READ_TIME,
     PERF_IX_DISK_WRITE_TIME,
+    PERF_IX_DISK_SNAP_TIME,
     PERF_IX_DISK_READ,
     PERF_IX_DISK_WRITE,
     PERF_IX_DISK_READ_BYTES,
@@ -118,12 +119,19 @@ typedef enum {
     perf_offsets[ix] ? \
         *((DWORD *)((BYTE *)counter_block + perf_offsets[ix])) : 0
 
+#define PERF_VAL64(ix) \
+    perf_offsets[ix] ? \
+        *((UINT64 *)((BYTE *)counter_block + perf_offsets[ix])) : (UINT64)0
+
 /* 1/100ns units to milliseconds */
 #define NS100_2MSEC(t) ((t) / 10000)
 
 #define PERF_VAL_CPU(ix) \
     NS100_2MSEC(PERF_VAL(ix))
 
+#define PERF_VAL_PREC(ix) \
+    NS100_2MSEC(PERF_VAL64(ix))
+
 #define MS_LOOPBACK_ADAPTER "Microsoft Loopback Adapter"
 #define NETIF_LA "la"
 
@@ -1934,16 +1942,26 @@ static PERF_INSTANCE_DEFINITION *get_disk_instance(sigar_t *sigar,
 
         switch (counter->CounterNameTitleIndex) {
           case PERF_TITLE_DISK_TIME:
-            perf_offsets[PERF_IX_DISK_TIME] = offset;
-            found = 1;
+            if(counter->CounterType == PERF_PRECISION_TIMESTAMP) {
+                /* It is assumed that timestamps for read/write/total times are equal. */
+                perf_offsets[PERF_IX_DISK_SNAP_TIME] = offset;
+                found = 1;
+            } else {
+                perf_offsets[PERF_IX_DISK_TIME] = offset;
+                found = 1;
+            }
             break;
           case PERF_TITLE_DISK_READ_TIME:
-            perf_offsets[PERF_IX_DISK_READ_TIME] = offset;
-            found = 1;
+            if(counter->CounterType != PERF_PRECISION_TIMESTAMP) {
+                perf_offsets[PERF_IX_DISK_READ_TIME] = offset;
+                found = 1;
+            }
             break;
           case PERF_TITLE_DISK_WRITE_TIME:
-            perf_offsets[PERF_IX_DISK_WRITE_TIME] = offset;
-            found = 1;
+            if(counter->CounterType != PERF_PRECISION_TIMESTAMP) {
+                perf_offsets[PERF_IX_DISK_WRITE_TIME] = offset;
+                found = 1;
+            }
             break;
           case PERF_TITLE_DISK_READ:
             perf_offsets[PERF_IX_DISK_READ] = offset;
@@ -2027,9 +2045,12 @@ SIGAR_DECLARE(int) sigar_disk_usage_get(sigar_t *sigar,
         }
 
         if (strnEQ(drive, dirname, 2)) {
-            disk->time   = PERF_VAL(PERF_IX_DISK_TIME);
-            disk->rtime  = PERF_VAL(PERF_IX_DISK_READ_TIME);
-            disk->wtime  = PERF_VAL(PERF_IX_DISK_WRITE_TIME);
+            /* Note: On NT 4.0 disk time is of type PERF_COUNTER_TIMER, so this
+             * code won't work. See http://support.microsoft.com/kb/269481. */
+            disk->time   = PERF_VAL_PREC(PERF_IX_DISK_TIME);
+            disk->rtime  = PERF_VAL_PREC(PERF_IX_DISK_READ_TIME);
+            disk->wtime  = PERF_VAL_PREC(PERF_IX_DISK_WRITE_TIME);
+            disk->snaptime = PERF_VAL_PREC(PERF_IX_DISK_SNAP_TIME);
             disk->reads  = PERF_VAL(PERF_IX_DISK_READ);
             disk->writes = PERF_VAL(PERF_IX_DISK_WRITE);
             disk->read_bytes  = PERF_VAL(PERF_IX_DISK_READ_BYTES);
